{"version":3,"file":"static/js/63.9b490ecd.chunk.js","mappings":"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","sources":["redux/contacts/operations.js","redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/css/Form.module.css?df75","components/Form.jsx","components/FilterInput.jsx","webpack://goit-react-hw-08-phonebook/./src/css/ContactsList.module.css?2c29","components/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n// GET @ /tasks\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchAll',\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios.get('/contacts');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// POST @ /tasks\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, thunkAPI) => {\n    try {\n      const response = await axios.post('/contacts', { name, number });\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n\n// DELETE @ /tasks/:id\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactsId, thunkAPI) => {\n    try {\n      const response = await axios.delete(`/contacts/${contactsId}`);\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const isContactNameUnique = (state, name) => {\n  const contacts = state.contacts.items;\n  return !contacts.some(contact => contact.name === name);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__EREYM\",\"input\":\"Form_input__alRqI\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from '../css/Form.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { isContactNameUnique } from 'redux/contacts/selectors';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const isUnique = useSelector(state => isContactNameUnique(state, name));\n  const contact = {\n    name,\n    number,\n  };\n  const handleChangeName = event => {\n    setName(event.target.value);\n    console.log(name);\n  };\n  const handleChangeNumber = event => {\n    setNumber(event.target.value);\n    console.log(number);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!name || !number) {\n      alert('Please enter name and number');\n      return;\n    }\n    if (!isUnique) {\n      alert('This contact already exists');\n      return;\n    }\n    console.log(contact);\n    dispatch(addContact({ name, number }));\n    // dispatch(addContact(number));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          className={css.input}\n        />\n      </label>\n      <label>\n        Number:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          className={css.input}\n        />\n      </label>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n};\n// Form.propTypes = {\n//   onAddContact: PropTypes.func.isRequired,\n// };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nexport const FilterInput = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n  const onChange = event => {\n    setValue(event.target.value);\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"Search contacts by name\"\n      style={{ marginBottom: '10px', padding: '5px' }}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listText\":\"ContactsList_listText__a0cEI\",\"listItem\":\"ContactsList_listItem__3DObf\",\"listButton\":\"ContactsList_listButton__837nC\"};","import React from 'react';\nimport css from '../css/ContactsList.module.css';\n// import PropTypes from 'prop-types';\n// import { getContacts, getFilter } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectAllContacts, selectFilter } from 'redux/contacts/selectors';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (filter) {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  } else {\n    return contacts;\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n  // console.log(contacts, filter);\n  const dispatch = useDispatch();\n  const visible = getVisibleContacts(contacts, filter);\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <ul>\n      {visible.map(contact => (\n        <li key={contact.id} className={css.listItem}>\n          <span className={css.listText}>\n            {contact.name}: {contact.number}\n          </span>\n          <button\n            onClick={() => onDeleteContact(contact.id)}\n            className={css.listButton}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n// ContactList.propTypes = {\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Form } from 'components/Form';\nimport { FilterInput } from 'components/FilterInput';\nimport { ContactList } from 'components/ContactsList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Helmet> */}\n      <title>Your contacts</title>\n      {/* </Helmet> */}\n      {/* <TaskEditor /> */}\n      <Form />\n      <div>{isLoading && 'Request in progress...'}</div>\n      {/* <TaskList /> */}\n      <FilterInput />\n      <ContactList />\n      <h3>contacts!</h3>\n    </>\n  );\n}\n"],"names":["axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","thunkAPI","get","res","data","rejectWithValue","message","addContact","name","number","post","response","deleteContact","contactsId","delete","selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","Form","useState","setName","setNumber","dispatch","useDispatch","isUnique","useSelector","some","contact","isContactNameUnique","onSubmit","event","preventDefault","console","log","alert","className","css","type","value","onChange","target","FilterInput","setValue","setFilter","placeholder","style","marginBottom","padding","ContactList","visible","toLowerCase","includes","getVisibleContacts","map","onClick","id","Contacts","isLoading","useEffect"],"sourceRoot":""}