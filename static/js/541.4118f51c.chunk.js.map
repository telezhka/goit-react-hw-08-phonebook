{"version":3,"file":"static/js/541.4118f51c.chunk.js","mappings":"4PAEAA,EAAAA,EAAMC,SAASC,QAAU,yCAElB,IAAMC,GAAgBC,EAAAA,EAAAA,IAC3B,oBAD2C,mCAE3C,WAAOC,EAAGC,GAAV,gGAEsBN,EAAAA,EAAMO,IAAI,aAFhC,cAEUC,EAFV,yBAGWA,EAAIC,MAHf,yDAKWH,EAASI,gBAAgB,KAAMC,UAL1C,yDAF2C,yDCJhCC,IDiBaR,EAAAA,EAAAA,IACxB,sBADwC,mCAExC,aAAyBE,GAAzB,kFAASO,EAAT,EAASA,KAAMC,EAAf,EAAeA,OAAf,kBAE2Bd,EAAAA,EAAMe,KAAK,YAAa,CAAEF,KAAAA,EAAMC,OAAAA,IAF3D,cAEUE,EAFV,yBAGWA,EAASP,MAHpB,yDAKWH,EAASI,gBAAgB,KAAEC,UALtC,yDAFwC,0DAabP,EAAAA,EAAAA,IAC3B,yBAD2C,mCAE3C,WAAOa,EAAYX,GAAnB,gGAE2BN,EAAAA,EAAMkB,OAAN,oBAA0BD,IAFrD,cAEUD,EAFV,yBAGWA,EAASP,MAHpB,yDAKWH,EAASI,gBAAgB,KAAEC,UALtC,yDAF2C,yDC9BhB,SAAAQ,GAAK,OAAIA,EAAMC,SAASC,OAAnB,G,SCQnB,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYd,GAM9B,OAJAe,EAAAA,EAAAA,YAAU,WACRJ,EAASpB,IACV,GAAE,CAACoB,KAGF,iCAEE,2BAAO,gBAGP,yBAAME,GAAa,4BAEnB,wBAAI,gBAGT,C","sources":["redux/contacts/operations.js","redux/contacts/selectors.js","pages/Contacts.jsx"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com/';\n// GET @ /tasks\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchAll',\n  async (_, thunkAPI) => {\n    try {\n      const res = await axios.get('/contacts');\n      return res.data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error.message);\n    }\n  }\n);\n\n// POST @ /tasks\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }, thunkAPI) => {\n    try {\n      const response = await axios.post('/contacts', { name, number });\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n\n// DELETE @ /tasks/:id\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (contactsId, thunkAPI) => {\n    try {\n      const response = await axios.delete(`/contacts/${contactsId}`);\n      return response.data;\n    } catch (e) {\n      return thunkAPI.rejectWithValue(e.message);\n    }\n  }\n);\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { Helmet } from 'react-helmet';\n// import { TaskList } from 'components/TaskList/TaskList';\n// import { TaskEditor } from 'components/TaskEditor/TaskEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {/* <Helmet> */}\n      <title>Your tasks</title>\n      {/* </Helmet> */}\n      {/* <TaskEditor /> */}\n      <div>{isLoading && 'Request in progress...'}</div>\n      {/* <TaskList /> */}\n      <h3>contacts!</h3>\n    </>\n  );\n}\n"],"names":["axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","thunkAPI","get","res","data","rejectWithValue","message","selectLoading","name","number","post","response","contactsId","delete","state","contacts","loading","Contacts","dispatch","useDispatch","isLoading","useSelector","useEffect"],"sourceRoot":""}