{"version":3,"file":"static/js/75.54f5a9ae.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-08-phonebook/./src/css/Form.module.css?df75","components/Form.jsx","components/FilterInput.jsx","webpack://goit-react-hw-08-phonebook/./src/css/ContactsList.module.css?2c29","components/ContactsList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n\nexport const isContactNameUnique = (state, name) => {\n  const contacts = state.contacts.items;\n  return !contacts.some(contact => contact.name === name);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__EREYM\",\"input\":\"Form_input__alRqI\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport css from '../css/Form.module.css';\nimport { addContact } from 'redux/contacts/operations';\nimport { isContactNameUnique } from 'redux/contacts/selectors';\n\nexport const Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const isUnique = useSelector(state => isContactNameUnique(state, name));\n  const contact = {\n    name,\n    number,\n  };\n  const handleChangeName = event => {\n    setName(event.target.value);\n    console.log(name);\n  };\n  const handleChangeNumber = event => {\n    setNumber(event.target.value);\n    console.log(number);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!name || !number) {\n      alert('Please enter name and number');\n      return;\n    }\n    if (!isUnique) {\n      alert('This contact already exists');\n      return;\n    }\n    console.log(contact);\n    dispatch(addContact({ name, number }));\n    // dispatch(addContact(number));\n    setName('');\n    setNumber('');\n  };\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label>\n        Name:\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          className={css.input}\n        />\n      </label>\n      <label>\n        Number:\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChangeNumber}\n          className={css.input}\n        />\n      </label>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n};\n// Form.propTypes = {\n//   onAddContact: PropTypes.func.isRequired,\n// };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nexport const FilterInput = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n  const onChange = event => {\n    setValue(event.target.value);\n    dispatch(setFilter(event.target.value));\n  };\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      placeholder=\"Search contacts by name\"\n      style={{ marginBottom: '10px', padding: '5px' }}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listText\":\"ContactsList_listText__a0cEI\",\"listItem\":\"ContactsList_listItem__3DObf\",\"listButton\":\"ContactsList_listButton__837nC\"};","import React from 'react';\nimport css from '../css/ContactsList.module.css';\n// import PropTypes from 'prop-types';\n// import { getContacts, getFilter } from 'redux/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectAllContacts, selectFilter } from 'redux/contacts/selectors';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (filter) {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  } else {\n    return contacts;\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectAllContacts);\n  const filter = useSelector(selectFilter);\n  // console.log(contacts, filter);\n  const dispatch = useDispatch();\n  const visible = getVisibleContacts(contacts, filter);\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <ul>\n      {visible.map(contact => (\n        <li key={contact.id} className={css.listItem}>\n          <span className={css.listText}>\n            {contact.name}: {contact.number}\n          </span>\n          <button\n            onClick={() => onDeleteContact(contact.id)}\n            className={css.listButton}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n// ContactList.propTypes = {\n//   onDeleteContact: PropTypes.func.isRequired,\n// };\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport { Form } from 'components/Form';\nimport { FilterInput } from 'components/FilterInput';\nimport { ContactList } from 'components/ContactsList';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <Form />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <FilterInput />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectLoading","state","contacts","loading","selectFilter","filter","selectAllContacts","items","Form","useState","name","setName","number","setNumber","dispatch","useDispatch","isUnique","useSelector","some","contact","isContactNameUnique","onSubmit","event","preventDefault","console","log","addContact","alert","className","css","type","value","onChange","target","FilterInput","setValue","setFilter","placeholder","style","marginBottom","padding","ContactList","visible","toLowerCase","includes","getVisibleContacts","map","onClick","id","deleteContact","Contacts","isLoading","useEffect","fetchContacts"],"sourceRoot":""}